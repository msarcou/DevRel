name: Build and Publish Go Challenge
 
on:
  push:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      security-events: write

    defaults:
      run:
        working-directory: Go_Challenge

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - show working dir structure
        run: ls -alR

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.12

      - name: Generate go.sum (before caching)
        run: go mod tidy
        working-directory: Go_Challenge

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          # Adaptez le path au dossier de votre code, ici DevRel/
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
   
      - name: Build Go binary
        run: go build -v -o challenge challenge.go

      - name: Setup JFrog CLI with OIDC
        uses: jfrog/setup-jfrog-cli@v4
        with:
          oidc-provider-name: githuboidc
          oidc-audience: jfrogaudience
        env:
          JF_URL: https://trialobdfvb.jfrog.io
          JFROG_CLI_AVOID_NEW_VERSION_WARNING: true

      - name: Collect environment variables for Build Info
        run: jf rt bce "go-challenge-build" "${{ github.run_number }}"

      - name: Upload binary to Artifactory
        run: |
          jf rt upload "challenge" "go-local/challenge-go/${{ github.sha }}/" \
            --build-name="go-challenge-build" \
            --build-number="${{ github.run_number }}"

      - name: Publish Build Info
        run: jf rt bp "go-challenge-build" "${{ github.run_number }}"

      - name: Scan build with Xray
        run: jf bs "go-challenge-build" "${{ github.run_number }}"

      
