name: Go Challenge CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-promote:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22

    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: 2.77.0  # dernière version stable

    - name: Configure JFrog CLI
      run: jf c add --url="${{ secrets.JF_URL }}" --user="${{ secrets.JF_USER }}" --password="${{ secrets.JF_PASSWORD }}" --interactive=false --server-id=default

    - name: Build Go binary
      run: |
        go build -o challenge

    - name: Publish to Artifactory (DEV)
      run: |
        jf rt u "challenge" "go-local/challenge-go/DEV/${{ github.sha }}/" \
          --build-name=go-challenge-build-DEV \
          --build-number=${{ github.run_number }}

    - name: Set environment property (DEV)
      run: |
        jf rt sp "go-local/challenge-go/DEV/${{ github.sha }}/challenge" "environment=DEV"

    - name: Collect build info (DEV)
      run: |
        jf rt bp go-challenge-build-DEV ${{ github.run_number }}

    - name: Xray Scan (DEV)
      run: |
        jf bs go-challenge-build-DEV ${{ github.run_number }} || true  # ignore si pas de policy bloquante

    - name: Promote DEV → STAGING
      run: |
        jf rt bpr "go-challenge-build-DEV" "${{ github.run_number }}" "go-local" \
          --status="Promoted to STAGING" \
          --copy=true \
          --props="environment=STAGING" \
          --comment="Promoting build to STAGING" \
          --build-name="go-challenge-build-STAGING" \
          --build-number="${{ github.run_number }}"

    - name: Promote STAGING → PROD
      run: |
        jf rt bpr "go-challenge-build-STAGING" "${{ github.run_number }}" "go-local" \
          --status="Promoted to PROD" \
          --copy=true \
          --props="environment=PROD" \
          --comment="Promoting build to PROD" \
          --build-name="go-challenge-build-PROD" \
          --build-number="${{ github.run_number }}"
