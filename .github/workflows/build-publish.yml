name: Build and Promote Go Challenge

on:
  workflow_dispatch:
  push:

jobs:
  build-publish-promote:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      security-events: write

    env:
      JF_URL: https://trialsar.jfrog.io
      BUILD_NAME: go-challenge-build
      MODULE_PATH: Go_Challenge
      TARGET_REPO: go-local

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.12

      - name: Init Go module
        run: |
          cd $MODULE_PATH
          go mod init challenge || true
          go mod tidy

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('Go_Challenge/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Build Go binary
        run: |
          cd $MODULE_PATH
          go build -v -o challenge challenge.go
          mv challenge challenge-DEV

      - name: Setup JFrog CLI with OIDC
        uses: jfrog/setup-jfrog-cli@v4
        with:
          oidc-provider-name: github
          custom-server-id: artifactory-prod
          oidc-audience: jfrog-github
        env:
          JFROG_CLI_AVOID_NEW_VERSION_WARNING: true

      - name: Collect build info
        run: |
          jf rt bce "${BUILD_NAME}" "${{ github.run_number }}"

      - name: Upload DEV binary
        run: |
          jf rt upload "${MODULE_PATH}/challenge" "go-local/challenge-go/${{ github.sha }}/" \
            --build-name="${BUILD_NAME}" \
            --build-number="${{ github.run_number }}"

      - name: Set DEV properties
        run: |
          jf rt sp "go-local/challenge-go/${{ github.sha }}/challenge" "environment=DEV"

      - name: Publish DEV build info
        run: |
          jf rt bp "${BUILD_NAME}" "${{ github.run_number }}"

      - name: Scan with Xray
        run: |
          jf bs "${BUILD_NAME}" "${{ github.run_number }}" || echo "No blocking policy, continuing..."

      - name: Promote to STAGING
        run: |
          jf rt bpr "${BUILD_NAME}" "${{ github.run_number }}" "${TARGET_REPO}" \
            --status="Promoted to STAGING" \
            --copy=true \
            --props="environment=STAGING" \
            --comment="Promoting to STAGING"

      - name: Publish STAGING build info
        run: |
          jf rt bp "${BUILD_NAME}" "${{ github.run_number }}"

      - name: Promote to PROD
        run: |
          jf rt bpr "${BUILD_NAME}" "${{ github.run_number }}" "${TARGET_REPO}" \
            --status="Promoted to PROD" \
            --copy=true \
            --props="environment=PROD" \
            --comment="Promoting to PROD"
            

      - name: Publish PROD build info
        run: |
          jf rt bp "${BUILD_NAME}" "${{ github.run_number }}"
